## Tuesday Jan 11, 2022 - 4 hours~

Create a readme, develop a set of project goals, decide on technology

Install 17.x node using nvm, install npm@latest, install serverless@latest

Create project directory structure (services, client)

Install create-react-app@latest

Create a new non-ejected react app in client directory

Install typescript dependencies

Modify create-react-app install to use typescript

Start up the react development server

Install tailwind css framework

Install postcss and create config files for tailwind and postcss so we can
use the framework without ejecting from create react app

Get some test tailwindcss into the main App to make sure its all hooked up to 
build

Take a look at CloudFront distribution via serverless framework

Install the AWS cli so that serverless can use credentials from the config

Create a serverless.yml file for the react frontend part of the site, include
config for an s3 bucket sync and a cloudfront deployment from the s3 bucket

## Wednesday Jan 12, 2022

Do inital commit via conventioncommits.org style

Create a basic data design for the form types so that we can start to work
on displaying a form

Set up infrastructure in our react app for handling form state and decide on
state management library if any

Work on the react components for displaying the form

Create a dummy lambda function that returns a form object with all the
right types of data

Do round trip deploy of the dummy lambda function using serverless

Make call from our react app to the dummy lambda function

Display our dummy form in our react app based on dummy call

Create a data design for a users table including authentication

Decide on hash algorithm with work factor and a minimum memory requirement -
Argon2id looks like it may be a standard in 2022

Decide on cookie structure for JWT and API authorization within the 
calls to lambda services
